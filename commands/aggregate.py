from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
import pandas as pd
from states import AggregateStates
from utils.analytics import analyze_columns
from utils.file_processing import save_temp_file, remove_temp_directory_by_file, remove_temp_directory_by_msg, get_columns_list

router = Router()

@router.message(F.text == "/aggregate")
async def cmd_column_info(message: Message, state: FSMContext):
    await state.set_state(AggregateStates.waiting_for_file)
    await message.answer(
        "üóÇÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ Excel-—Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤.",
        reply_markup=ReplyKeyboardRemove()
    )

@router.message(AggregateStates.waiting_for_file, F.document)
async def process_file(message: Message, state: FSMContext):
    file_path = await save_temp_file(message)
    if not file_path:
        await message.answer("‚ùå –û—à–∏–±–∫–∞: —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xlsx.")
        await state.clear()
        return

    try:
        columns_list = get_columns_list(file_path)
        columns_text = "\n".join([f"‚Ä¢ {col}" for col in columns_list])
        await state.update_data(file_path=file_path, df_columns=columns_list)
        await state.set_state(AggregateStates.waiting_for_column)
        await message.answer(
            f"üìä *–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã*:\n{columns_text}\n\n"
            "üîπ–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–ª–±—Ü—ã (*–±–µ–∑ –æ—à–∏–±–æ–∫*) –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.\n"
            "üîπ–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–≤–æ–¥–∞ —á–∞—Å—Ç–æ—Ç–Ω–æ—Å—Ç–∏, —É–∫–∞–∂–∏—Ç–µ –ø–æ—Å–ª–µ –Ω–∞–∑–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –¥–≤–æ–µ—Ç–æ—á–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π —Ç–æ–ø–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n"
            "*–∫–∞—Ç–µ–≥–æ—Ä–∏—è:4, —Ü–µ–Ω–∞, –≥–æ—Ä–æ–¥:10*\n"
            '—Ç–∞–∫ –¥–ª—è —Å—Ç–æ–ª–±—Ü–æ–≤ —Å ":" –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω —Ç–æ–ø –∑–Ω–∞—á–µ–Ω–∏–π –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∏ –∫–æ–ª-–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π'
        )
    except Exception as e:
        remove_temp_directory_by_file(file_path)
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        await state.clear()

@router.message(AggregateStates.waiting_for_column)
async def process_columns(message: Message, state: FSMContext):
    data = await state.get_data()
    df = pd.read_excel(data['file_path'])
    await analyze_columns(message, df, data['df_columns'], message.text)

    await message.answer(
        "üîÅ –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?\n"
        "–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–∏–µ —Å—Ç–æ–ª–±—Ü—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é",
        reply_markup=kb
    )
