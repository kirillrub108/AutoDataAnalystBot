from aiogram import Router, F
from aiogram.types import Message, BufferedInputFile
from aiogram.fsm.context import FSMContext
from states import ChartStates
from utils.chart_generation import generate_chart_image

router = Router()

@router.message(F.text == "/chart")
async def cmd_chart(message: Message, state: FSMContext):
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    await state.set_state(ChartStates.waiting_for_file)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ Excel-—Ñ–∞–π–ª, –∏ —è –ø–æ—Å—Ç—Ä–æ—é –≥—Ä–∞—Ñ–∏–∫.")

@router.message(ChartStates.waiting_for_file, F.document)
async def process_chart_file(message: Message, state: FSMContext):
    buf_or_error = await generate_chart_image(message)
    if isinstance(buf_or_error, str):
        # –µ—Å–ª–∏ –≤–µ—Ä–Ω—É–ª–∞—Å—å –æ—à–∏–±–∫–∞
        await message.answer(buf_or_error)
    else:
        await message.answer_photo(
            BufferedInputFile(buf_or_error.getvalue(), filename="chart.png"),
            caption="–í–æ—Ç –≤–∞—à –≥—Ä–∞—Ñ–∏–∫ üìä"
        )
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –ª–æ–≤–∏–ª —Ñ–∞–π–ª—ã –¥–∞–ª—å—à–µ
    await state.clear()
